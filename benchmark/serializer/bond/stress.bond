namespace bond

struct Simple {
  1: string Value;
  2: int32 ShortValue;
  3: int32 IntValue;
  4: int64 LongValue;
}

struct Complex {
  1: Simple SimpleValue;
  2: vector<Simple> ListValue;
//  3: set<Simple> SetValue;
  4: map<string,Simple> MapValue;
//  5: list<set<map<string,list<Simple>>>> ListSetMap;
  6: map<string, list<map<string,Simple>> > MapList;
  7: list<list<string>> ListOfList;
  8: list<list<list<string>>> ListOfListOfList;
}

struct Record
{
    0: string Name;
    1: vector<double> Constants;
}

using guid_str = string;
using guid_bin = blob;

struct GuidExample
{
    0: guid_str id_str;
    1: guid_bin id_bin;
}

struct Generic1<T>
{
    0: nullable<T> Field;
}

struct Generic2<T : value>
{
    0: T Field = nothing;
}

struct GenericExample
{
    0: Generic1<Generic2<int32>> Field;
}

enum ShapeType
{
    Unknown,
    Circle,
    Rectange
}

struct Shape
{
    0: ShapeType Type = Unknown;
}

struct Circle : Shape
{
    0: double Radius;
}

struct Rectangle : Shape
{
    0: double Width;
    1: double Height;
}

struct Polymorphic
{
    0: vector<bonded<Shape>> Shapes;
} 